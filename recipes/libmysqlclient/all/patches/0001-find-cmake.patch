diff --git a/cmake/zlib.cmake b/cmake/zlib.cmake
--- a/cmake/zlib.cmake
+++ b/cmake/zlib.cmake
@@ -51,28 +51,7 @@ MACRO (MYSQL_CHECK_ZLIB_WITH_COMPRESS)
   IF(WITH_ZLIB STREQUAL "bundled")
     MYSQL_USE_BUNDLED_ZLIB()
   ELSE()
-    SET(ZLIB_FIND_QUIETLY TRUE)
-    INCLUDE(FindZLIB)
-    IF(ZLIB_FOUND)
-      INCLUDE(CheckFunctionExists)
-      SET(SAVE_CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES})
-      SET(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} z)
-      CHECK_FUNCTION_EXISTS(crc32 HAVE_CRC32)
-      CHECK_FUNCTION_EXISTS(compressBound HAVE_COMPRESSBOUND)
-      CHECK_FUNCTION_EXISTS(deflateBound HAVE_DEFLATEBOUND)
-      SET(CMAKE_REQUIRED_LIBRARIES ${SAVE_CMAKE_REQUIRED_LIBRARIES})
-      IF(HAVE_CRC32 AND HAVE_COMPRESSBOUND AND HAVE_DEFLATEBOUND)
-        SET(ZLIB_LIBRARY ${ZLIB_LIBRARIES} CACHE INTERNAL "System zlib library")
-        SET(WITH_ZLIB "system" CACHE STRING
-          "Which zlib to use (possible values are 'bundled' or 'system')")
-        SET(ZLIB_SOURCES "")
-      ELSE()
-        SET(ZLIB_FOUND FALSE CACHE INTERNAL "Zlib found but not usable")
-        MESSAGE(STATUS "system zlib found but not usable")
-      ENDIF()
-    ENDIF()
-    IF(NOT ZLIB_FOUND)
-      MYSQL_USE_BUNDLED_ZLIB()
-    ENDIF()
+    find_package(ZLIB REQUIRED)
+    SET(ZLIB_LIBRARY ZLIB::ZLIB CACHE INTERNAL "System zlib library")
   ENDIF()
 ENDMACRO()

diff --git a/cmake/ssl.cmake b/cmake/ssl.cmake
index b4c0e28c..278dadb9 100644
--- a/cmake/ssl.cmake
+++ b/cmake/ssl.cmake
@@ -282,6 +282,16 @@ MACRO (MYSQL_CHECK_SSL)
     FIND_LIBRARY(CRYPTO_LIBRARY
                  NAMES crypto libcrypto libeay32
                  HINTS ${OPENSSL_ROOT_DIR}/lib)
+    IF(NOT OPENSSL_LIBRARY)
+        FIND_LIBRARY(OPENSSL_LIBRARY
+                    NAMES ssld libssld ssleay32d ssleay32MDd
+                    HINTS ${OPENSSL_ROOT_DIR}/lib)
+    ENDIF()
+    IF(NOT CRYPTO_LIBRARY)
+        FIND_LIBRARY(CRYPTO_LIBRARY
+                    NAMES cryptod libcryptod libeay32d
+                    HINTS ${OPENSSL_ROOT_DIR}/lib)
+    ENDIF()
 
     IF(OPENSSL_INCLUDE_DIR)
       # Verify version number. Version information looks like:
